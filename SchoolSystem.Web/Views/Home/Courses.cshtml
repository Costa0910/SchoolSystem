@model IEnumerable<SchoolSystem.Web.ViewModels.Home.CourseViewModel>

@{
  ViewBag.Title = "Courses Page";
}

<section class="section courses" id="courses">
  <div class="container">
    <div class="row">
      <div class="col-lg-12 text-center">
        <div class="section-heading">
          <h6>Latest Courses</h6>
          <h2>Latest Courses</h2>
        </div>
      </div>
    </div>
    <!-- ***** Serach Start ***** -->
    <div class="search-input event_filter">
      <form id="search">
        <input type="text" placeholder="Type Something" id='searchText' name="searchKeyword"/>
        <i class="fa fa-search"></i>
      </form>
    </div>
    <!-- ***** Serach Start ***** -->
    <div class="row" id="coursesContainer">
      <div class="d-flex flex-wrap justify-content-center gap-5 align-self-center mb-30">
        @foreach (var course in Model)
        {
        <div class="course">
          <a asp-action="CourseDetails" asp-route-id="@course.Id"
             asp-controller="Home">
            <div class="card" style="width: 18rem;">
              <img src="@course.CoverImageUrl" class="card-img-top" alt="...">
              <div class="card-body">
                <h3 class="author card-text text-truncate">@course.Name</h3>
                <p class="card-text desc text-truncate">@course.Description</p>
              </div>
            </div>
          </a>
        </div>
        }
      </div>
    </div>
  </div>
</section>

@section Scripts {
  <script type="text/javascript">
    const form = document.getElementById('search');
    const searchText = document.getElementById('searchText');

  form.addEventListener('submit', (e) => {
    e.preventDefault();
    Filter();
  });

  let timerId ;

  searchText.addEventListener("input", (e) => {
    clearTimeout(timerId);
    timerId = setTimeout(() => {
      Filter();
    }, 500);
  });


  const Filter = () => {
    console.log('Filtering', searchText.value);
    const searchKeyword = searchText.value.toLocaleLowerCase();
    const courses = document.getElementsByClassName('course');
    for (let i = 0; i < courses.length; i++) {
      const course = courses[i];
      const courseName = course.getElementsByClassName('author')[0]
        .textContent.toLocaleLowerCase();
      const courseDescription = course.getElementsByClassName
      ('desc')[0].textContent.toLocaleLowerCase();
      if (courseName.includes(searchKeyword) || courseDescription.includes
      (searchKeyword) || searchKeyword === '') {
        course.style.display = "block";
      } else {
        course.style.display = "none";
      }
    }
         debugger;
    console.log('Filtering done');
  }
  </script>
}
